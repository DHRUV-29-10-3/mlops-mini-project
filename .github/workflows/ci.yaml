name : CI Pipeline 


on : push 

jobs: 
  project-testing:
    runs-on: ubuntu-latest 

    steps:
      - name : checkout-code 
        uses : actions/checkout@v3

      - name : setup python 
        uses : actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name : install dependencies 
        run: |
          pip install -r requirements.txt

      - name : run pipeline
        env:
         DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: | 
          dvc repro

      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_model.py

      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: Login to AWS ECR
        run : |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 905418417806.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t dhruv_great_ecr .

      - name: Tag Docker image
        run: |
          docker tag dhruv_great_ecr:latest 905418417806.dkr.ecr.ap-south-1.amazonaws.com/dhruv_great_ecr:latest

      - name: Push Docker image to ECR
        run: |
          docker push 905418417806.dkr.ecr.ap-south-1.amazonaws.com/dhruv_great_ecr:latest